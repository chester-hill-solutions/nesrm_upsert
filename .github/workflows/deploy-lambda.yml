name: Deploy Lambda

on:
  push:
    branches:
      - main
    paths:
      - "**.*" # Change to the file extension of the language that you are using.

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      S3_BUCKET: nesrm-upsert
      S3_KEY: nesrm_upsert.zip
      LAMBDA_FUNCTION_NAME: nesrm_upsert
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # To fetch the current commit and its parent (so we can compare)

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHub_Actions_Role
          aws-region: us-east-1 # Modify this to your desired AWS region

      - name: Print changed files # To properly debug what is being deployed (It can be removed).
        run: |
          echo "List of changed files:" 
          echo $(git diff --name-only HEAD^ HEAD)
      - name: Download S3 Files
        run: |
          # Download the existing zip from S3
          aws s3 cp s3://$S3_BUCKET/$S3_KEY existing_lambda.zip
      - name: Unzip and iterate
        run: |
          # Unzip the existing package
          unzip existing_lambda.zip -d lambda_env
          ls lambda_env
          # Copy only the modified .py files from the commit into the unzipped directory
          # This will maintain their directory structure.
          for file in $(git diff-tree --no-commit-id --name-only -r HEAD); do
              # Create the directory structure in lambda_env for the modified file
              mkdir -p lambda_env/$(dirname $file)
              # Copy the modified file
              cp $file lambda_env/$file
              # Print what you've done with the file
              echo "Copied $file to lambda_env/$file"
              echo "Content of $file after copying:"
              cat lambda_env/$file
          done
      - name: Zip
        run: |
          # Zip the directory again
          cd lambda_env
          ls 
          zip -r ../updated-lambda.zip .
          cd ..
          echo "Upload the updated zip to S3"
          echo $S3_BUCKET
          aws s3 cp updated-lambda.zip s3://$S3_BUCKET/$S3_KEY
          echo "Update Lambda function code"
          aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --s3-bucket $S3_BUCKET --s3-key $S3_KEY
          # Cleanup
          rm -r lambda_env
          rm existing_lambda.zip updated-lambda.zip
